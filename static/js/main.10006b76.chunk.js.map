{"version":3,"sources":["components/Listview/index.jsx","components/TableView/index.jsx","components/MainForm/index.jsx","components/Form/index.jsx","components/filter/filter.jsx","components/todos/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LisItem","todo","toggoleselect","toggoleComplete","ListGroupItem","className","CustomInput","type","id","checked","isSelect","onChange","text","time","toDateString","Button","color","isComplete","onClick","ListView","todos","ListGroup","map","Prop","object","isRequired","func","TableItem","scope","TableView","Table","array","MainForm","handleCreatTodo","handleSearch","Input","placeholder","e","target","value","Form","modalp","createTodop","toggle","useState","description","setTodo","createTodo","name","Date","Math","random","Modal","isOpen","ModalHeader","action","onSubmit","preventDefault","ModalBody","htmlFor","required","ModalFooter","Filter","this","props","all","running","completed","listView","tableView","view","clearSelect","clearComplete","Reset","Component","index","state","fake","modal","searchTerm","todoId","find","t","setState","console","log","unshift","toggole","filter","toLowerCase","includes","App","Container","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10006b76.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Prop from 'prop-types'\r\nimport {ListGroupItem,ListGroup,CustomInput,Button} from 'reactstrap'\r\nfunction LisItem({todo,toggoleselect,toggoleComplete}) {\r\n    return (\r\n        <ListGroupItem className=\"d-flex align-items-center\">\r\n            <CustomInput\r\n                type=\"checkbox\"\r\n                id={todo.id}\r\n                checked={todo.isSelect}\r\n                onChange={()=> toggoleselect(todo.id)}\r\n            />\r\n            <div className=\"mx-3\">\r\n                <h4>{todo.text}</h4>\r\n               <p>{todo.time.toDateString()}</p>\r\n            </div>\r\n            <Button className=\"ms-auto\" color={todo.isComplete? 'success':'danger'} onClick={()=>toggoleComplete(todo.id)}>\r\n                {todo.isComplete? 'Complete':'Runing...'}\r\n            </Button>\r\n        </ListGroupItem>\r\n    )\r\n}\r\n\r\nLisItem.Prop={\r\n    todo:Prop.object.isRequired,\r\n    toggoleselect: Prop.func.isRequired,\r\n    toggoleComplete: Prop.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default function ListView({todos,toggoleselect,toggoleComplete}) {\r\n    return (\r\n       <ListGroup>\r\n           {todos.map(todo=> (\r\n               <LisItem\r\n               key={todo.id}\r\n               todo={todo}\r\n               toggoleselect={toggoleselect}\r\n               toggoleComplete={toggoleComplete}\r\n               \r\n               />\r\n           ))}\r\n       </ListGroup>\r\n    )\r\n}\r\nListView.Prop={\r\n    todos:Prop.object.isRequired,\r\n    toggoleselect: Prop.func.isRequired,\r\n    toggoleComplete: Prop.func.isRequired\r\n}","import React from 'react'\r\nimport {Table,CustomInput,Button} from 'reactstrap'\r\nimport Prop from 'prop-types'\r\n\r\n\r\nfunction TableItem({todo,toggoleselect,toggoleComplete}) {\r\n    return (\r\n       \r\n            <tr>\r\n                <th scope=\"row\">\r\n                <CustomInput\r\n                type=\"checkbox\"\r\n                id={todo.id}\r\n                checked={todo.isSelect}\r\n                onChange={()=>toggoleselect(todo.id)}\r\n                />\r\n                </th>\r\n                <th>{todo.time.toDateString()} </th>\r\n                <th>{todo.text} </th>\r\n                <th>\r\n                    <Button\r\n                     color={todo.isComplete? 'success':'danger'}\r\n                    onClick={()=>toggoleComplete(todo.id)}\r\n                    >\r\n                        {todo.isComplete? 'Complete':'Runing...'}\r\n                    </Button>\r\n                </th>\r\n            </tr>\r\n\r\n\r\n       \r\n    )\r\n}\r\nTableItem.Prop={\r\n    todo: Prop.array.isRequired,\r\n    toggoleselect: Prop.func.isRequired,\r\n    toggoleComplete: Prop.func.isRequired\r\n}\r\n \r\nfunction TableView  ({todos,toggoleselect,toggoleComplete}){\r\n   return (\r\n    <Table>\r\n    <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>time</th>\r\n            <th>todo</th>\r\n            <th>action</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n    {todos.map(todo=> (\r\n               <TableItem\r\n               key={todo.id}\r\n               todo={todo}\r\n               toggoleselect={toggoleselect}\r\n               toggoleComplete={toggoleComplete}\r\n               \r\n               />\r\n           ))}\r\n    </tbody>\r\n</Table>\r\n   )\r\n}\r\nTableView.Prop={\r\n    todos: Prop.object.isRequired,\r\n    toggoleselect: Prop.func.isRequired,\r\n    toggoleComplete: Prop.func.isRequired\r\n}\r\nexport default TableView;","import React from 'react'\r\nimport {Input,Button} from 'reactstrap'\r\nexport default function MainForm({handleCreatTodo,handleSearch}) {\r\n    return (\r\n        <div className=\"d-flex my-3\">\r\n            <Input\r\n                type=\"search\"\r\n                placeholder=\"Enter your todo name\"\r\n                onChange={e=>handleSearch(e.target.value)}\r\n            ></Input>\r\n            <Button color='success' onClick={()=>handleCreatTodo()}>Create</Button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\r\n\r\nconst Form = ({ modalp, createTodop,toggle }) => {\r\n\r\n\r\n    const [todo, setTodo] = useState({ text: '', description: ''})\r\n\r\n\r\n\r\n    const createTodo = (e) => {\r\n        setTodo({ ...todo, [e.target.name]: e.target.value, time: new Date(), id: Math.random() * 10000, isComplete:false,isSelect:false })\r\n    }\r\n    const todop = (e) => {\r\n        e.preventDefault()\r\n        createTodop(todo)\r\n  \r\n        setTodo({text: '', description: '' })\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Modal isOpen={modalp} toggle={toggle} className=''>\r\n                <ModalHeader toggle={toggle}>create todo</ModalHeader>\r\n                <form action=\"#\" onSubmit={todop}>\r\n                <ModalBody>\r\n                    \r\n                        <label htmlFor=\"text\">Text :</label>\r\n                        <Input type='text'\r\n                            name='text'\r\n                            id=\"text\"\r\n                            value={todo.text}\r\n                            onChange={e => createTodo(e)}\r\n                            placeholder='Enter your todo name'\r\n                            required\r\n                        /> <br />\r\n                        <label htmlFor=\"description\">description :</label>\r\n                        <Input type='text'\r\n                            name='description'\r\n                            id='description'\r\n                            value={todo.description}\r\n                            onChange={e => createTodo(e)}\r\n\r\n                        />\r\n                        \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <button type='submit' className=\"btn btn-success\" >create</button>\r\n                   \r\n                </ModalFooter>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react'\r\n\r\nexport default class Filter extends Component {\r\n    render() {\r\n        const { all, running, completed, listView, tableView, view,clearSelect,clearComplete,Reset } = this.props\r\n        return (\r\n            <div className='d-flex align-items-center mb-3'>\r\n                <div className=\"btn-group flex-grow-2\">\r\n                    <button className=\"btn btn-dark\" onClick={all}>All</button>\r\n                    <button className=\"btn btn-dark\" onClick={running}>Running</button>\r\n                    <button className=\"btn btn-dark\" onClick={completed}>completed</button>\r\n                </div>\r\n                <div className=\"flex-grow-1 d-flex justify-content-center\">\r\n                    <div className=\"mx-2\">\r\n                        <input type=\"radio\"\r\n                            id='listView'\r\n                            checked={view}\r\n                            onClick={listView}\r\n                        />\r\n                        <label className='mx-1' htmlFor=\"listView\" > List View</label>\r\n                    </div>\r\n                    <div className=\"mx-2\">\r\n                        <input type=\"radio\"\r\n                            id='tableView'\r\n                            checked={!view}\r\n                            onClick={tableView}\r\n                        />\r\n                        <label className='mx-1' htmlFor=\"tableView\">Table View</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn-group flex-grow-2\">\r\n                    <button className=\"btn btn-primary\" onClick={clearSelect}>clear select</button>\r\n                    <button className=\"btn btn-primary\" onClick={clearComplete}>Clear Completed</button>\r\n                    <button className=\"btn btn-primary\" onClick={Reset}>Reset</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ListView from '../Listview/index'\r\nimport TableView from '../TableView/index'\r\nimport MainForm from '../MainForm/index'\r\nimport Modal from '../Form/index'\r\nimport Filter from '../filter/filter'\r\n\r\nexport default class index extends Component {\r\n    state = {\r\n        todos: [\r\n            {\r\n                id: \"fdjs\",\r\n                isSelect: false,\r\n                time: new Date(),\r\n                text: 'amar soner bangla',\r\n                isComplete: false\r\n\r\n            },\r\n            {\r\n                id: \"fdfgjs\",\r\n                isSelect: false,\r\n                time: new Date(),\r\n                text: 'amar soner bangla',\r\n                isComplete: true\r\n\r\n            },\r\n            {\r\n                id: \"frdfgjs\",\r\n                isSelect: false,\r\n                time: new Date(),\r\n                text: 'amar soner bangla ami tumay valobashi',\r\n                isComplete: true\r\n\r\n            }\r\n        ],\r\n        fake:[],\r\n        modal: false,\r\n        view:true,\r\n        searchTerm:''\r\n    }\r\n\r\n    toggoleselect = todoId => {\r\n\r\n        const todos = this.state.todos\r\n        const todo = todos.find(t => t.id === todoId)\r\n        todo.isSelect = !todo.isSelect\r\n\r\n        this.setState({ todos })\r\n\r\n    }\r\n    toggoleComplete = todoId => {\r\n\r\n        const todos = this.state.todos\r\n        const todo = todos.find(t => t.id === todoId)\r\n        todo.isComplete = !todo.isComplete\r\n\r\n        this.setState({ todos })\r\n\r\n\r\n    }\r\n    handleCreatTodo = () => {\r\n        this.setState({ modal: !this.state.modal })\r\n        console.log(this.state.modal)\r\n    }\r\n\r\n    createTodop = (todo) => {\r\n\r\n        const todos = this.state.todos\r\n        todos.unshift(todo)\r\n        \r\n        let fake = todos\r\n        this.setState({\r\n            todos,\r\n            fake,\r\n            modal: !this.state.modal,\r\n            \r\n        })\r\n\r\n\r\n    }\r\n    toggole = () => this.setState({ modal: !this.state.modal })\r\n\r\n    all = () => {\r\n        let fake = this.state.todos\r\n        this.setState({fake})\r\n    }\r\n    running = () => {\r\n        const todo = this.state.todos\r\n        const fake =todo.filter(t =>t.isComplete === false)\r\n        this.setState({fake})\r\n\r\n    }\r\n    completed = () => {\r\n        const todo = this.state.todos\r\n        const fake =todo.filter(t =>t.isComplete === true)\r\n        this.setState({fake})\r\n    }\r\n    listView = () =>{\r\n        this.setState({view:true})\r\n       \r\n    }\r\n    tableView = () =>{\r\n        this.setState({view:false})\r\n    }\r\n\r\n    clearSelect = () =>{\r\n        let todo = this.state.todos\r\n        const todos = todo.filter(t => t.isSelect === false)\r\n        let fake = todos\r\n        this.setState({todos,fake})\r\n    }\r\n    clearComplete = () =>{\r\n        let todo = this.state.todos\r\n        const todos = todo.filter(t => t.isComplete === false)\r\n        let fake = todos\r\n        this.setState({todos,fake})\r\n\r\n        console.log(todos)\r\n\r\n    }\r\n    Reset = () =>{\r\n        this.setState({todos:[],fake:[]})\r\n    }\r\n\r\n    handleSearch = (value)=>{\r\n        this.setState({searchTerm:value},()=>{\r\n            let todo = this.state.todos\r\n            const fake=  todo.filter(t => t.text.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n              this.setState({fake})\r\n        })\r\n       \r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n       this.setState({fake:this.state.todos})\r\n    }\r\n   \r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\" text-capitalize my-4 text-center\">stack todos</h1>\r\n                <MainForm\r\n                    handleCreatTodo={this.handleCreatTodo}\r\n                    handleSearch={this.handleSearch}\r\n                />\r\n                <Filter\r\n                    all={this.all}\r\n                    running={this.running}\r\n                    completed={this.completed}\r\n                    listView={this.listView}\r\n                    tableView={this.tableView}\r\n                    view={this.state.view}\r\n                    clearSelect={this.clearSelect}\r\n                    clearComplete={this.clearComplete}\r\n                    Reset={this.Reset}\r\n                />\r\n                <div>\r\n                    {this.state.view? (<ListView\r\n                        todos={this.state.fake}\r\n                        toggoleComplete={this.toggoleComplete}\r\n                        toggoleselect={this.toggoleselect}\r\n                    />):(\r\n                        <TableView\r\n                        todos={this.state.fake}\r\n                        toggoleComplete={this.toggoleComplete}\r\n                        toggoleselect={this.toggoleselect}\r\n                    />\r\n                    )}\r\n                    \r\n                    \r\n\r\n                </div>\r\n                <Modal\r\n                    modalp={this.state.modal}\r\n                    createTodop={this.createTodop}\r\n                    toggle={this.toggole}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Container,Col,Row} from 'reactstrap'\r\nimport Todo from './components/todos/index'\r\n\r\nexport default function App() {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Todo />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}